name: Build

on:
  repository_dispatch:
    types:
      - build-image

jobs:
  release_version:
    name: Get release version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup Variables
        id: vars
        run: |
          echo "::set-output name=date::$(date +'%y.%m')"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    outputs:
      version: ${{ steps.vars.outputs.date }}.${{ github.run_id }}-${{ steps.vars.outputs.sha_short }}

  main:
    needs: [release_version]
    name: Build ${{ github.event.client_payload.image_name }}:${{ needs.release_version.outputs.version }}
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ github.event.client_payload.image_name }}
      DOCKERFILE: ${{ github.event.client_payload.dockerfile }}
      CONTEXT: ${{ github.event.client_payload.context }}
      VERSION: ${{ needs.release_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Setup
        uses: docker/setup-buildx-action@v1
        id: builder
      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          file: ${{ env.DOCKERFILE }}
          context: ${{ env.CONTEXT }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ needs.release_version.outputs.version }}
            ${{ env.IMAGE_NAME }}:latest
